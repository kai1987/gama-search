// Generated by CoffeeScript 1.8.0

/*
 * search 的测试类
 */

(function() {
  var SearchManager, con, config, debug, mulitItem, options, owner_id, search, should, singleItem, table_name;

  should = require('should');

  debug = require('debug')('gama-search::tests::search_test');

  config = require('./config');

  SearchManager = require('../search');


  /*
  action=push&Version=v2&AccessKeyId=$accessKeyId&Signature=$signature&
      SignatureMethod=HMAC-SHA1&Timestamp=$timestamp&SignatureVersion=1.0&
          SignatureNonce=$signatureNonce&
              items=[{"cmd": "ADD",
                  "fields":{
                      "id":"8dac2812baa0b2",
                          "title":"这里是一个标题",
                              "body":"这里是文档的详细内容"}}]"
   */


  /*
      @accessKeyId = searchOptions.accessKeyId
      @accessKeySecret = searchOptions.accessKeySecret
      @apiURL = searchOptions.apiURL || 'http://opensearch.aliyuncs.com'
      @version = searchOptions.version || 'v2'
      @format = searchOptions.format || 'json'
      @timeout = searchOptions.timeout || 3000
      @dataType = searchOptions.dataType || 'json'
       *@serverURL = urlUtil.resolve @apiURL, path.join(@version, 'api/')
      @serverURL = @apiURL
      @indexName = searchOptions.indexName || 'test'
      @signatureMethod = searchOptions.signatureMethod||'HMAC-SHA1'
      @signatureVersion = searchOptions.SignatureVersion || '1.0'
   */

  con = config.opensearch || {};

  options = {
    accessKeyId: con.accessKeyId,
    accessKeySecret: con.accessKeySecret,
    apiURL: con.host
  };

  table_name = 'main';

  owner_id = 'GO2SIsP';

  search = new SearchManager(options);

  singleItem = [
    {
      id: 'aaaaaaaa',
      title: '这里是一个标题002',
      owner_id: owner_id,
      desc: '这里是文档的详细内容',
      model_name: 'iconpack'
    }
  ];

  mulitItem = [
    {
      id: 'bbbbbb',
      title: '这里是一个标题003',
      owner_id: owner_id,
      desc: '这里是文档的详细内容',
      model_name: 'iconpack'
    }, {
      id: 'ccccccc',
      title: '这里是一个标题005',
      owner_id: owner_id,
      desc: '这里是文档的详细内容',
      model_name: 'iconpack'
    }
  ];

  describe("url_encode test", function() {
    before(function() {});
    describe("insert tests", function() {
      it('insert single', function(done) {
        return search.insert(singleItem, table_name, function(err, data) {
          console.error("error:" + err);
          console.dir(data);
          return done();
        });
      });
      return it('insert mulit', function(done) {
        return search.insert(mulitItem, table_name, function(err, data) {
          console.error("error:" + err);
          console.dir(data);
          return done();
        });
      });
    });
    describe("update tests", function() {
      it('update single', function(done) {
        return search.update(singleItem, table_name, function(err, data) {
          console.error("error:" + err);
          console.dir(data);
          return done();
        });
      });
      return it('update mulit', function(done) {
        return search.update(mulitItem, table_name, function(err, data) {
          console.error("error:" + err);
          console.dir(data);
          return done();
        });
      });
    });
    return describe('search tests', function() {
      it("search id test", function(done) {
        return search.searchById('3', owner_id, function(err, data) {
          console.log("err:" + err);
          console.dir(data);
          return done();
        });
      });
      return it("search default test", function(done) {
        return search.search('文档', owner_id, function(err, data) {
          console.error("error:" + err);
          console.dir(data);
          return done();
        });
      });
    });
  });

}).call(this);
